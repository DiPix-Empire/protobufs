syntax = "proto3";

message Empty {}

message ChatMessage {
	string sender = 1;		// nickname
	string content = 2;		// message content
}

message ConsoleCommand {
	string cmd = 1;
}
message ConsoleLog {
	string raw = 1; 
}

// A client-sided methods to open server-sided sctreams
// Also push messages and commands
//! DEPRECATED
// service ChatMessageService {
// 	rpc ConnectChat(Empty) returns (stream ChatMessage);
// 	rpc ConnectConsole(Empty) returns (stream ConsoleLog);
// 	rpc SendMessage(ChatMessage) returns (Empty);
// 	rpc SendCommand(ConsoleCommand) returns (Empty);
// }

message PlayerList {
	repeated string players = 1;
}
//! DEPRECATED
// service Stats {
// 	rpc PingServer(Empty) returns (Empty); // It works!	
// 	rpc GetPlayers(Empty) returns (PlayerList); // Request a player list
// }

// Data requested from bot by gameserver
// Server - Bot; Client - Game
service MinecraftToBot {
	rpc MessagePool(stream ChatMessage) returns (stream ChatMessage);
	rpc ConsolePool(stream ConsoleLog) returns (stream ConsoleCommand);
}
// Data required or sent by bot
// Server - Game; Client - Bot
service BotToMinecraft {
	rpc GetPlayers(Empty) returns (PlayerList); // Request a player list
	rpc Reconnect(Empty) returns (Empty); // Signal to reinit streams
}
